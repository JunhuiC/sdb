/**
 * Sequoia: Database clustering technology.
 * Copyright (C) 2006 Continuent, Inc.
 * Contact: sequoia@continuent.org
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 *
 * Initial developer(s): Gilles Rayrat.
 * Contributor(s): ______________________.
 */

package org.continuent.sequoia.controller.backend.result;

import java.io.Serializable;
import java.sql.SQLWarning;

/**
 * Super-class for all results of [Prepared|Callable]Statement.XXXExecuteXXX()
 * commands that holds the sql warning chain generated by the execution of this
 * command.<br>
 * In order to introduce the sql warnings support, every command issued on a
 * backend must call getWarnings() right after its execution. This is the only
 * way to keep the context and to make sure that no other command is issued
 * between the execute and the getWarnings.<br>
 * Warnings are *not* retrieved by default, so there will be no performance
 * issue for those who don't need warnings. To enable them, use
 * "?retrieveSQLWarnings=true" URL option at connection time (this is a
 * by-connection property)
 * 
 * @author <a href="mailto:gilles.rayrat@continuent.com">Gilles Rayrat</a>
 * @version 1.0
 */
public abstract class AbstractResult implements Serializable
{
  /**
	 * 
	 */
	private static final long serialVersionUID = -2999308987898158691L;
private SQLWarning statementWarnings = null;

  /**
   * Get the warning chain associated to the current result
   * 
   * @return the warning chain or null if there were no warning, or if warnings
   *         retrieval was not enabled for this connection
   */
  public SQLWarning getStatementWarnings()
  {
    return statementWarnings;
  }

  /**
   * Associate a warning chain for the current result
   * 
   * @param warnings the SQL warnings that comes with the result
   */
  public void setStatementWarnings(SQLWarning warnings)
  {
    this.statementWarnings = warnings;
  }
}
